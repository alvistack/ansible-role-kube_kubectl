---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: include default variables
  include_vars: "../vars/main.yml"

- name: include release specific variables
  include_vars: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "../vars"
      skip: true

- name: include release specific tasks
  include_tasks: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "."
      skip: true

- name: prepare directories
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  loop:
    - { dest: "/etc/bash_completion.d" }
    - { dest: "/root/.kube", mode: "0700" }
    - { dest: "/usr/local/bin" }

- name: download archive
  shell: |
    set -euxo pipefail
    mkdir -p /var/log/ansible
    exec &> >(tee -a /var/log/ansible/{{ kubectl_download.checksum }}-get_url.log)
    TMP_DIR="$(mktemp -d)" \
      && cd $TMP_DIR \
      && mkdir -p .{{ kubectl_download.dest | dirname }} \
      && curl -skL -m 300 {{ kubectl_download.url }} > .{{ kubectl_download.dest }} \
      && echo -n "{{ kubectl_download.checksum }} .{{ kubectl_download.dest }}" | sha256sum -c - \
      && mkdir -p {{ kubectl_download.dest | dirname }} \
      && mv .{{ kubectl_download.dest }} {{ kubectl_download.dest }} \
      && rm -rf $TMP_DIR
  args:
    executable: "/bin/bash"
    creates: "/var/log/ansible/{{ kubectl_download.checksum }}-get_url.log"
  register: result
  until: result is succeeded

- name: unarchive package
  shell: |
    set -euxo pipefail
    mkdir -p /var/log/ansible
    exec &> >(tee -a /var/log/ansible/{{ kubectl_download.checksum }}-unarchive.log)
    cd /usr/local/bin
    TMP_DIR="$(mktemp -d)" \
      && cp {{ kubectl_download.dest }} $TMP_DIR/kubectl \
      && chown root:root $TMP_DIR/kubectl \
      && chmod 0755 $TMP_DIR/kubectl \
      && mv $TMP_DIR/kubectl . \
      && rm -rf $TMP_DIR
  args:
    executable: "/bin/bash"
    creates: "/var/log/ansible/{{ kubectl_download.checksum }}-unarchive.log"

- name: install bash completion
  environment:
    PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
  shell: |
    set -euxo pipefail
    kubectl completion bash > /etc/bash_completion.d/kubectl
  args:
    executable: "/bin/bash"
  changed_when: false
  failed_when: false

- name: prepare files
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - { dest: "/usr/local/bin/kubectl", mode: "0755" }

- name: symlink files
  file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    force: "{{ item.force | default(true) }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('link') }}"
    follow: false
  loop:
    - { src: "/etc/kubernetes/admin.conf", dest: "/root/.kube/config", mode: "0600" }

- name: prepare files
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - { dest: "/etc/bash_completion.d/kubectl" }
